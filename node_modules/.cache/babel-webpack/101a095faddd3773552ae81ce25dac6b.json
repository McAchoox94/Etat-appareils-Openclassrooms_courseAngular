{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/appareils.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../appareil/appareil.component\";\n\nfunction AppareilViewComponent_app_appareil_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-appareil\", 4);\n  }\n\n  if (rf & 2) {\n    const appareil_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"appareilName\", appareil_r1.name)(\"appareilStatus\", appareil_r1.status)(\"index\", i_r2);\n  }\n}\n\nexport class AppareilViewComponent {\n  constructor(appareilService) {\n    this.appareilService = appareilService;\n    this.isAuth = false;\n    this.lastUpdate = new Promise((resolve, reject) => {\n      const date = new Date();\n      setTimeout(() => {\n        resolve(date);\n      }, 2000);\n    });\n  }\n\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.appareils = this.appareilService.appareils;\n  }\n\n  onAllumer() {\n    this.appareilService.switchOnAll();\n  }\n\n  onEteindre() {\n    if (confirm('Etes-vous sûr de vouloir éteindre tous vos appareils ?')) {\n      this.appareilService.switchOffAll();\n    } else {\n      return null;\n    }\n  }\n\n}\n\nAppareilViewComponent.ɵfac = function AppareilViewComponent_Factory(t) {\n  return new (t || AppareilViewComponent)(i0.ɵɵdirectiveInject(i1.AppareilsService));\n};\n\nAppareilViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppareilViewComponent,\n  selectors: [[\"app-appareil-view\"]],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"list-group\"], [3, \"appareilName\", \"appareilStatus\", \"index\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [3, \"appareilName\", \"appareilStatus\", \"index\"]],\n  template: function AppareilViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Etat des appareils\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\", 0);\n      i0.ɵɵtemplate(3, AppareilViewComponent_app_appareil_3_Template, 1, 3, \"app-appareil\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h2\");\n      i0.ɵɵtext(5, \"Mes appareils\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppareilViewComponent_Template_button_click_9_listener() {\n        return ctx.onAllumer();\n      });\n      i0.ɵɵtext(10, \"Tout allumer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppareilViewComponent_Template_button_click_11_listener() {\n        return ctx.onEteindre();\n      });\n      i0.ɵɵtext(12, \"Tout \\u00E9teindre\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.appareils);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Mis \\u00E0 jour : \", i0.ɵɵpipeBind1(8, 4, ctx.lastUpdate), \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.isAuth);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.isAuth);\n    }\n  },\n  directives: [i2.NgForOf, i3.AppareilComponent],\n  pipes: [i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBhcmVpbC12aWV3LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\achra\\Documents\\Angular\\Openclassrooms\\appOClassR1\\src\\app\\appareil-view\\appareil-view.component.ts","C:\\Users\\achra\\Documents\\Angular\\Openclassrooms\\appOClassR1\\src\\app\\appareil-view\\appareil-view.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AppareilsService } from '../services/appareils.service';\n\n@Component({\n  selector: 'app-appareil-view',\n  templateUrl: './appareil-view.component.html',\n  styleUrls: ['./appareil-view.component.scss']\n})\nexport class AppareilViewComponent implements OnInit {\n\n  isAuth = false;\n\n  appareils! :any[];\n\n  lastUpdate = new Promise((resolve, reject) => {\n    const date = new Date();\n    setTimeout(() => {\n      resolve(date);\n    }, 2000\n    );\n  });\n\n  constructor( private appareilService: AppareilsService ) {}\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.appareils = this.appareilService.appareils;\n  \n  }\n\n  onAllumer() {\n    this.appareilService.switchOnAll();\n  }\n  \n  onEteindre() {\n    if(confirm('Etes-vous sûr de vouloir éteindre tous vos appareils ?')) {\n      this.appareilService.switchOffAll();\n    } else {\n      return null;\n    }\n}\n\n}\n","<h2>Etat des appareils</h2>\n<ul class=\"list-group\">\n  <app-appareil  *ngFor=\"let appareil of appareils; let i = index\"\n                 [appareilName]=\"appareil.name\"\n                 [appareilStatus]=\"appareil.status\" \n                 [index]=\"i\"></app-appareil>\n</ul>\n\n<h2>Mes appareils</h2>\n<p>Mis à jour : {{ lastUpdate | async }}</p>\n\n<button class=\"btn btn-success\"\n        [disabled]=\"!isAuth\"\n        (click)=\"onAllumer()\">Tout allumer</button>\n<button class=\"btn btn-danger\"\n        [disabled]=\"!isAuth\"\n        (click)=\"onEteindre()\">Tout éteindre</button>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}